version: "3.8"

services:
  file_server:
    # container_name: file-server
    build:
      context: file_server/
    ports:
      - "1234"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"
      replicas: 5
    volumes:
      - ./.fileserver/data:/tmp/
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  middleware:
    # container_name: middleware
    build:
      context: middleware/
    ports:
      - "8080"
    depends_on:
      - redis
      - file_server
    environment:
      - FILE_SERVER_HOST=file_server
      - FILE_SERVER_PORT=1234
      - FILE_SERVER_PROTO=http
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    deploy:
      replicas: 5

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./.redis/data:/data
    # volumes:
    #   - redis_data:/data

  # LOAD TESTER:
  # This container is for convenience and does not count against your resource cap.
  # Comment this out if you want to manually run load tests from the `load_test` directory.
  go_load_tester:
    container_name: load-tester
    build:
      context: go_load_test/
    environment:
      - FILE_SERVER_HOST=middleware
      - FILE_SERVER_PORT=8080
      - FILE_SERVER_PROTO=http
      - FILE_SERVER_PATH_PREFIX=api/fileserver
      - REQUESTS_PER_SECOND=1
      - SEED_GROWTH_AMOUNT=1
      - ENABLE_REQUEST_RAMP=true
      - ENABLE_FILE_RAMP=true
      - MAX_FILE_COUNT=3000
      - MAX_FILE_SIZE=1024
      - TERM=xterm-256color
    volumes:
      - ./.fileserver/data:/tmp/
    depends_on:
      - middleware
      # - cache
